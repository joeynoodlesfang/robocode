integrate bullet accuracy for robot behaviour
BulletMissedEvent BulletHitBulletEvent BulletHitEvent


getEnergy
Fire

// test learningLoop retained as comment in main robot.
//	public void learningLoop2(ScannedRobotEvent e){
//		while (true) {
//			double bearingFromRadar = getHeading() + e.getBearing() - getRadarHeading();
//			double bearingFromGun = getHeading() + e.getBearing() - getGunHeading();
//			setTurnRadarRight(normalRelativeAngleDegrees(bearingFromRadar));
//			setTurnGunRight(normalRelativeAngleDegrees(bearingFromGun));
//			setAhead(50);
//			setTurnRight(-30);
//			scan();
//        	copyCurrentSAVIntoPrevSAV();
//        	generateCurrentStateVector();
//        	qFunction(); 
//        	doAction(); 
//        	resetReward();
//			
//			execute();
//		}
//	}  

/**
* default stream printing segment obtained from sittingduck.java
*/		
//		
//		PrintStream w = null;
//		try {
//			w = new PrintStream(new RobocodeFileOutputStream(getDataFile("DodgerQFile.dat")));
//
//			for (int i = 0; i < 3; i++) {
//				for (int j = 0; j < 3; j++) {
//					for (int k = 0; k < 3; k++) {
//						w.println(testArray[i][j][k]);
//					}
//				}
//			}
//			// PrintStreams don't throw IOExceptions during prints, they simply set a flag.... so check it here.
//			if (w.checkError()) {
//				//Error 0x03: cannot write
//				out.println("Something done fucked up (Error0x03 cannot write)");
//			}
//		} catch (IOException e) {
//			out.println("IOException trying to write: ");
//			e.printStackTrace(out); //Joey: lol no idea what this means
//		} finally {
//			if (w != null) {
//				w.close();
//			}
//		}
