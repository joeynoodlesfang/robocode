April 2017
- A1 Investigate WaveSurfing, and other methods of neural net. Study other NN's codes.

Feb-Mar 2017 Push on finishing development branch tasks so that it is ready for master.
- A1 Done. Add proper documention for NN2, LUTTrackfire, Dodger, MyRobots dir and main Robocode dir. 
- B1 Done. Set up local error recording
- B2 Review spiking QVal situation
- B3 Provide Robocode installation instructions for testing robots.
- C1 Implement setFire after turning gun as instructed by robowiki.
- D1 Improve performance by using less globals and more locals.
- D2 Import NN2 into NN1.
- E1 Determine usefulness of momentum.
- G1 consider only recording entries with vastly different values to limit data
1-24 
- Set up local error recording
1-19 thur
- Set up Qval recording
- implement NN2 changes into NN1
	- review imp/exp.
	- improve reward system
	- consider states that build for a smoother net.
	- consider discrete actions, and possibility of combining actions into states. Note the goal of the net to converge into a Q value.
- if time allows, implement setFire changes (described in 1-18wed)
1-18 wed
- implement NN2 changes into NN1
- NN1 adjustments to include rewards.
- Investigate negative Q_max.
- Implement setFire after turning gun as instructed by robowiki.
	- investigate if it is true.
1-16 mon
- add in ability to clear log first: mby send blank log first at end of battle before sending others?
- review getmax and fp for action selection (log indicates all currSAV seems 0'd for action.)
1-14 sat
- add sheet for monitoring Q (per turn? any indication for after fight?)
- review log data.
	- current logging abilities for FP have no idea whether weights are being used properly: consider adding in printout for weights.
- fix bug whwere Q_curr is NOT used Good Lord.
- Consider changing relationship between Q_cur and Q_prev in Qfxn, so that gamma is either 1, or gamma applies to both.
- Consider reducing effect of reward, or change reward fxnalities.

1-4 wed (extended from 12-25 sun)
- Finish first draft of NN1 v1.0.1
	1. Import NN framework from NN2.
	2. Import + rewrite NN2 read/write structure to include hexNumInInt-config line, and settings for reset for winLose.
	3. Design NN-based SAs
	4. Misc corrections(LEL soo bad)

- Consider adding DoAction2 and if condition for modular learning.
- Consider using local variables(? is this possible)
- Adding arrays to modularize nn, use defines for numHiddens
- Consider adding in a line at bottom of file so dimensions are correct.


12-22
- Write Readme.txt and transfer worklogs into worklog.txt
